<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="dao.ShopDAO">
 
 <!-- 카테고리별 상품 리스트 : 1차 분류 -->
<select id="list_1" resultType="GoodsInfoVO" parameterType="int">
select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate,
     g.gdsImg, g.gdsThumbImg
         from goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode where g.cateCode=#{cateCode} or c.cateCodeRef=#{cateCodeRef}
                
             
</select>

<!-- 카테고리별 상품 리스트 : 2차 분류 -->
<select id="list_2" resultType="GoodsInfoVO"> 
select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate,
     g.gdsImg, g.gdsThumbImg
         from goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode 
                 where g.cateCode=#{cateCode}
</select>

<!-- 상품조회 + 카테고리 조인  -->

<select id="goodsView" resultType="GoodsInfoVO" parameterType="int">
 select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate,
     g.gdsImg, g.gdsThumbImg
         from goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode          
            where g.gdsNum=#{gdsNum}
 
</select>
<!-- 상품 소감 (댓글)작성  -->
<insert id="registReply" parameterType="ReplyVO">
 insert into reply (repNum,repCon,gdsNum,userId) values (#{repNum},#{repCon},#{gdsNum},#{userId})
</insert>

<!-- 상품 소감(댓글) 리스트 -->
<!-- <select id="replyList" resultType="ReplyListVO" parameterType="int">

  select 
   r.gdsNum, r.userId, r.repNum, r.repCon, r.repDate, m.userName 
   from reply r inner join member m 
   on r.userId = m.userId  

     gdsNum=#{gdsNum}
   
   
</select>
 -->
<select id="replyList" resultType="ReplyListVO">
 select r.gdsNum , r.userId, r.repNum, r.repCon, r.repDate, m.userName
 from reply r inner join member m
 on r.userid = m.userId
 where r.gdsNum=#{gdsNum}
</select>

<!--댓글 삭제  -->
<delete id="deleteReply" parameterType="ReplyVO" >
 delete from reply where repNum=#{repNum} and userId=#{userId}
</delete>

<!--아이디 체크  -->
<select id="idCheck" resultType="String">
select userId from reply where repNum=#{repNum}
</select>
<!-- 상품 소감(댓글) 수정 -->
<update id="modifyReply" parameterType="ReplyVO">
 update reply set repCon=#{repCon} where repNum=#{repNum} and userId=#{userId}
</update>


  <!--장바구니 추가-->
<insert id="addCart" parameterType="CartVO">
insert into cart (cartNum, userId, gdsNum,cartStock) values(#{cartNum},#{userId},#{gdsNum},#{cartStock})

</insert>

 <!--장바구니 리스트  -->
<select id="cartList" resultType="CartListVO">
select 
     c.cartNum,c.gdsNum, c.cartStock, c.addDate,
     g.gdsName, g.gdsPrice, g.gdsThumbImg,@rownum :=@rownum+1 AS NUM 

 from cart c
     inner join goods g
         on c.gdsNum = g.gdsNum ,
  (select @rownum :=0) as r 
     where c.userId=#{userId} order by cartNum desc

</select>
<!--장바구니 삭제  -->
<delete id="deleteCart" parameterType="CartVO">
delete from cart where cartNum=#{cartNum} and userId=#{userId}

</delete>
<!--주문정보  -->
<insert id="orderInfo" parameterType="OrderVO">
insert into shopping.order (orderId,userId,orderRec,userAddr1,userAddr2,userAddr3,orderPhon,amount)
values (#{orderId},#{userId},#{orderRec},#{userAddr1},#{userAddr2},#{userAddr3},#{orderPhon},#{amount})
</insert>
<!--주문 상세정보  -->
<insert id="orderDetails" parameterType="OrderDetailVO">
insert into order_details (orderDetailsNum,orderId,gdsNum,cartStock)
select #{orderDetailsNum},#{orderId},gdsNum,cartStock from cart
</insert>

<!--장바구니 비욱;  -->
<delete id="cartAllDelete">
delete from cart where userId=#{userId}
</delete>

<!--주문목록 보여주기  -->
<select id="orderList" resultType="OrderVO">

select orderId,orderRec,userAddr1,userAddr2,userAddr3,orderPhon,amount,orderDate,delivery
from shopping.order where userId=#{userId}
</select>

<!--특정 주문 목록  -->
<select id="orderView" resultType="OrderListVO">
select o.orderId, o.orderRec, o.userAddr1,o.userAddr2,o.userAddr3,o.orderPhon,o.amount,o.orderDate
,o.delivery,d.orderDetailsNum, d.gdsNum, d.cartStock,
g.gdsName, g.gdsThumbImg, g.gdsPrice
from shopping.order o
  inner join order_details d
    on o.orderId = d.orderId
    inner join goods g
      on d.gdsNum = g.gdsNum
      where o.userId=#{userId} and o.orderId=#{orderId}

</select>
 </mapper>