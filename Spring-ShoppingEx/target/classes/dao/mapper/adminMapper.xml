<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.AdminDAO">
<!--카테고리호출  -->
<select id="category" resultType="CategoryVO">
SELECT 1 AS LEVEL, CATENAME, CATECODE, CATECODEREF FROM goods_category WHERE CATECODEREF is NULL
UNION ALL
SELECT 2 AS LEVEL, CATENAME, CATECODE, CATECODEREF FROM goods_category WHERE CATECODEREF IS NOT null
ORDER BY CATECODE


</select>
<!--상품등록  -->
<insert id="register" parameterType="GoodsVO">


 insert into goods (gdsNum, gdsName, cateCode, gdsPrice, gdsStock, gdsDes,gdsImg,gdsThumbImg) 
  values (#{gdsNum}, #{gdsName}, #{cateCode}, #{gdsPrice}, #{gdsStock}, #{gdsDes}, #{gdsImg}, #{gdsThumbImg})

</insert>

 
<select id="goodslist" resultType="GoodsInfoVO">

 select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate,
     g.gdsImg, g.gdsThumbImg
         from goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode 
</select>

<!-- 상품조회 + 카테고리 조인  -->

<select id="goodsView" resultType="GoodsInfoVO">
 select
     g.gdsNum, g.gdsName, g.cateCode, c.cateCodeRef, c.cateName, gdsPrice, gdsStock, gdsDes, gdsImg, gdsDate,
     g.gdsImg, g.gdsThumbImg
         from goods g
             inner join goods_category c
                 on g.cateCode = c.cateCode          
            where g.gdsNum=#{g.gdsNum}
 
</select>
<!--상품수정  -->
<update id="GoodsModify" >
   update goods set 
     gdsName=#{gdsName},cateCode=#{cateCode}, gdsPrice=#{gdsPrice},gdsStock=#{gdsStock},gdsDes=#{gdsDes}, gdsImg=#{gdsImg}, gdsThumbImg=#{gdsThumbImg} where gdsNum=#{gdsNum}

</update>
<!--상품삭제  -->
<delete id="GoodsDelete">
   delete from goods where gdsNum=#{gdsNum}

</delete>

<!--모든 유저의 주문목록  -->
<select id="AdminList" resultType="OrderVO">
select orderId,userId,orderRec,userAddr1,userAddr2,userAddr3,orderPhon,amount,orderDate,delivery from shopping.order

</select>

<!--특정 주문 목록  -->
<select id="AdminView" resultType="OrderListVO">
select o.orderId, o.userId,o.orderRec,o.userAddr1,o.userAddr2,o.userAddr3,o.orderPhon,o.amount,o.orderDate,o.delivery,
d.orderDetailsNum,d.gdsNum,d.cartStock,
g.gdsNum,g.gdsThumbImg,g.gdsPrice
from shopping.order o
   inner join order_details d
      on o.orderId =d.orderId
      inner join goods g
      on d.gdsNum = g.gdsNum
      where o.orderId=#{orderId}
</select>

<!-- 배송 상태 -->
<update id="delivery" parameterType="OrderVO">
 update shopping.order set delivery=#{delivery}
 where orderId=#{orderId}
 
</update>
<!--상품 수량조절  -->
<update id="changeStock" parameterType="GoodsVO">
update goods
   set gdsStock=gdsStock - #{gdsStock}
   where gdsNum=#{gdsNum}

</update>
<!--모든 댓글 관리  -->

<select id="allReply" resultType="ReplyListVO">
select r.gdsNum,r.userId,r.repNum,r.repCon,r.repDate, m.userName
from reply r
  inner join member m
  on r.userId = m.userId
  
</select>
<!--관리자 댓글삭제  -->
<delete id="deleteReply">
delete from reply where repNum=#{repNum}

</delete>
</mapper>